= RESTful and Beyond - Building Services from the Ground Up
John D. Ament
:backend: dzslides
:dzslides-style: tomorrow
:dzslides-transition: horizontal-slide
:dzslides-fonts: family=Yanone+Kaffeesatz:400,700,200,300&family=Cedarville+Cursive
:dzslides-highlight: tomorrow-night-bright

[.topic.title]
== Restful and beyond

[.topic.intro]
== Intro
[.incremental]
* Learn about microservices
* Build using Java EE technologies in SE

== *About Me*

* Apache DeltaSpike PMC
* Software Architect @ Sparta Systems
* CDI 2.0 Expert Group Member

image::ds-logo.png[height=100]

* Twitter @JohnAment

== The Technologies
[.incremental]
* *Java EE* Technologies
* Hibernate (JPA)
* JBoss Weld (CDI)
* Apache DeltaSpike (CDI Extensions)
* Apache CXF (JAX-WS)
* JBoss RestEasy (JAX-RS)
* JBoss Undertow (Servlet & WebSocket)
* Arquillian

== Container Control

[.statement]
* The ability to start a CDI container regardless of what impelementation you are using

[.topic.source]
== Startup.java

[source,java]
--
@Vetoed
public class Startup {
    public static void main(String[] args) {
        Startup startup = new Startup();
        startup.start();
    }

    public void start() {
        CdiContainer cdiContainer = CdiContainerLoader.getCdiContainer();
        cdiContainer.boot();
        cdiContainer.getContextControl().startContexts();

        registerShutdownHook(cdiContainer);

        CDI.current().getBeanManager().fireEvent(new ApplicationStartupEvent());
    }

    private void registerShutdownHook(CdiContainer cdiContainer) {
        Runtime.getRuntime().addShutdownHook(new Thread(cdiContainer::shutdown));
    }
}
--

== Context Control

[.statement]
* The ability to start and stop contexts on demand

[.topic.source]
== RequestScopedServletRequestListener.java

[source,java]
--
public class CDIRequestListener implements ServletRequestListener {
    @Override
    public void requestDestroyed(ServletRequestEvent e) {
        ((ContextControl)e.getServletRequest().getAttribute("cdiRequestContext")).stopContext(RequestScoped.class);
    }

    @Override
    public void requestInitialized(ServletRequestEvent e) {
        ContextControl contextControl = CDI.current().select(ContextControl.class).get();
        e.getServletRequest().setAttribute("cdiRequestContext", contextControl);
        contextControl.startContext(RequestScoped.class);
    }
}
--

[.topic.ending]
== Thank you!

